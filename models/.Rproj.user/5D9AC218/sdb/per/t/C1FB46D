{
    "collab_server" : "",
    "contents" : "library(deSolve)\nlibrary(zoo)\nlibrary(\"Rcpp\")\nlibrary(\"BH\")\n\n##############################################################################################################################\n#Assumptions\n#load params from value_gender4_v3.R and p1, p2 from graphs.R\nsource(\"C:/Users/ahauser/Documents/Step1/Rfiles/used scripts/marisa/value_gender4_v3.R\")\np1=c(rate1_inf=3.318999e+00, rate2_inf=5.440886e-01, rate1_diag=2.736363e+02, rate2_diag=7.710578e+00, rate_treat=1.879695e-03,rate_death=1.632000e-01)\np2=c(rate1_inf=NA, rate2_inf=NA, rate1_diag=NA, rate2_diag=NA, rate_treat=NA,rate_death=NA,q=0.05,rate_ratio=0.5,k1=1,k2=2,k3=2,alpha=2,rate_res=5,rate_susc=125)\n#no treatment interruption\nparams<-within(params,{\n  RateStopTreatFirst=4.35/c(Inf,Inf,Inf,Inf)\n  RateStopSuppFirst=4.35/c(Inf,Inf,Inf,Inf)\n  RateStopFailFirst=4.35/c(Inf,Inf,Inf,Inf)\n  RateStopTreatSecond=4.35/c(Inf,Inf,Inf,Inf) #Assumption : T2 same as T1\n  RateStopSuppSecond=4.35/c(Inf,Inf,Inf,Inf)\n  RateStopFailSecond=4.35/c(Inf,Inf,Inf,Inf)\n})\n#no starting with second-line PI\nparams<-within(params,{\n  #RateDirectTreatSecond=4.35/c(5000,12000,13000,1850)\n  RateDirectTreatSecond=c(0,0,0,0)\n  #RateTreatSecond=c(0,0,0,0)\n})\n##############################################################################################################################\n\n\n\ntreat_dtg100=c(p_w_start=1,p_w_switch=1,rate_first=1,rate_switch=1,p_treat=1,p_supp=1,p_fail=1,delay_first=0,delay_switch=0)\n\nsource(\"C:/Users/ahauser/Documents/Step1/Rfiles/used scripts/marisa/parmin4_v3.R\")\nsourceCpp(\"C:/Users/ahauser/Documents/Step2/dtg/solvdiff_cpp_dtg_2_2005.cpp\")\nxstart_dtg_2_2005=xstart_f_dtg_2(p2,treat_dtg100)\ntheta=p1\ntheta[1:2]=0\np2[\"alpha\"]=2\np2[\"alpha2\"]=2\nxstart=rep(0,250)\nxstart[select_15(3,1:4,1,1:2)]=rep(100,8)\n#15 compartments\ndata=my_fun10_solver2_dtg_2(xstart,theta,treat_dtg100,params,p2)\nrowSums(data[c(13,25,61),select_15(5,1:4,1:2,1:2)])/rowSums(data[c(13,25,61),select_15(4:5,1:4,1:2,1:2)])\nrowSums(data[c(13,25,61,125),select_15(6:8,1:4,1:2,1:2)])/rowSums(data[c(13,25,61,125),select_15(c(6:8,3:5),1:4,1:2,1:2)])\nrowSums(data[c(1,25,61,125),select_15(c(3:5),1:4,1:2,1:2)])\nrowSums(data[c(1,25,61,125),select_15(c(13),1:4,1:2,1:2)])/rowSums(data[c(1,25,61,125),select_15(c(1:15),1:4,1:2,1:2)])\nrowSums(data[c(1,25,61,125),select_15(c(6:8,13:15),1:4,1:2,1:2)])/rowSums(data[c(1,25,61,125),select_15(c(1:15),1:4,1:2,1:2)])\n\ndiff(data[,241])\n\nrowSums(data[seq(1,125,1),select_15(c(5),1:4,1:2,1:2)])\nrowSums(data[seq(1,125,1),select_15(c(3:8),1:4,1:2,1:2)])\nrowSums(data[seq(1,125,1),select_15(c(6:8),1:4,1:2,1:2)])\n#rowSums(data[1:12,select_15(c(1,2,6:15),1:4,1:2,1:2)])\na=diff(data[1:25,242])\nsum(diff(data[1:25,242]))\n\n\n\nxstart=rep(0,250)\nxstart[select_15(3,1:4,2,1:2)]=rep(100,8)\n#15 compartments\ndata=my_fun10_solver2_dtg_2(xstart,theta,treat_dtgb,params,p2)\nrowSums(data[c(13,25,61),select_15(5,1:4,1:2,1:2)])/rowSums(data[c(13,25,61),select_15(4:5,1:4,1:2,1:2)])\n#rowSums(data[1:12,select_15(c(1,2,6:15),1:4,1:2,1:2)])\na=diff(data[1:61,242])\nsum(a[1:24])\nsum(a[1:60])\n\n\n\n\n\nparams<-within(params,{\n  RateTreatSecond=c(0,0,0,0)\n})\nsource(\"C:/Users/ahauser/Documents/Step1/Rfiles/used scripts/marisa/parmin4_v3.R\")\np2[\"alpha\"]=2\np2[\"alpha2\"]=5\nsourceCpp(\"C:/Users/ahauser/Documents/Step2/dtg/solvdiff_cpp_dtg_2_2005.cpp\")\nxstart_dtg_2_2005=xstart_f_dtg_2(p2,treat_dtgb)\ntheta=p1\ntheta[1:2]=0\nxstart=rep(0,250)\nxstart[select_15(3,1:4,2,1:2)]=rep(100,2)\n#15 compartments\ndata=my_fun10_solver2_dtg_2(xstart,theta,treat_dtgb,params,p2)\nrowSums(data[c(13,25,61),select_15(5,1:4,1:2,1:2)])/rowSums(data[c(13,25,61),select_15(4:5,1:4,1:2,1:2)])\nrowSums(data[c(13,25,61),select_15(5,1:4,1:2,1:2)])/rowSums(data[c(13,25,61),select_15(3:5,1:4,1:2,1:2)])\n\n\n\n\n\n\n\n\n\n\n\nlibrary(\"deSolve\")\n\n#R and C++ procedure time\n\nptm <- proc.time()\ndata=my_fun10_solver2_dtg_2(xstart_dtg_2,theta,treat_dtg8,params,p2)\nproc.time() - ptm\n\nptm <- proc.time()\ntheta[1:2]=0\nparams<-within(params,{\n  RateTreatSecond=c(0,0,0,0)\n})\n########################################################################################################\n#Slower switching rate to second-line\n#baseline rate\nsource(\"C:/Users/ahauser/Documents/Step1/Rfiles/used scripts/marisa/parmin4_v3.R\")\nsourceCpp(\"C:/Users/ahauser/Documents/Step2/dtg/solvdiff_cpp_dtg_2_2005.cpp\")\nxstart_dtg_2_2005=xstart_f_dtg_2(p2,treat_dtgb)\ntheta=p1\np2[\"alpha\"]=2.64\np2[\"alpha2\"]=4.9\n#15 compartments\ndata=my_fun10_solver2_dtg_2(xstart_dtg_2_2005,theta,treat_dtgb,params,p2)\nfigures_2_dtg_update(data)\nrowSums(data[1:157,select_15(6:8,1:4,1:2,1:2)])/rowSums(data[1:157,select_15(c(3:11,13:15),1:4,1:2,1:2)])\nrowSums(data[1:157,select_15(5,1:4,1:2,1:2)])/rowSums(data[1:157,select_15(c(4:5),1:4,1:2,1:2)])\n\n#slower rate\nparams_pi<-within(params,{\n  RateTreatSecond=RateTreatSecond/10\n})\ndata=my_fun10_solver2_dtg_2(xstart_dtg_2_2005,theta,treat_dtgb,params_pi,p2)\nfigures_2_dtg_update(data)\nrowSums(data[1:157,select_15(6:8,1:4,1:2,1:2)])/rowSums(data[1:157,select_15(c(3:11,13:15),1:4,1:2,1:2)])\n\n\n\n\n\n##############################################################################################################################\n#parameters change\nparams_rct1<-within(params,{\n  RateTreatSecond=c(0,0,0,0)\n  RateFailToSuppTreatFirst=c(0,0,0,0)\n})\n\n\nparams_rct2<-within(params,{\n  RateTreatSecond=c(0,0,0,0)\n  RateFailToSuppTreatFirst=c(0,0,0,0)\n})\n\n\nhazard_rct1=function(alpha1,alpha2,time_lim){\n  source(\"C:/Users/ahauser/Documents/Step1/Rfiles/used scripts/marisa/parmin4_v3.R\")\n  p2[\"alpha\"]=alpha1\n  p2[\"alpha2\"]=alpha2\n  \n  #------------------------------------------------------------------------------------------------------\n  #xstart, susceptible\n  xstart=rep(0,250)\n  xstart[select_15(3,1:4,1,1:2)]=rep(1000,8)\n  xstart=xstart[select_15(3:5,1:4,1:2,1:2)]\n  xstart=c(xstart,0,0)\n  parms_lsoda=list(p1=theta,treat_dtg=treat_dtgb,parms1=params_rct1,p2=p2)\n  \n  #Simulation\n  data2 <- lsoda(xstart,times=1:time_lim,func= mod_dtg_lsoda, parms = parms_lsoda)\n  data2 <- data2[,-1]\n  data=matrix(0,nrow=time_lim,ncol=250)\n  data[1:time_lim,select_15(3:5,1:4,1:2,1:2)]=data2[1:time_lim,1:48]\n  data[1:time_lim,241:242]=data2[1:time_lim,49:50]\n  \n  #survival data\n  time=0:(time_lim-1)\n  at_risk=floor(rowSums(data[1:time_lim,select_15(3:4,1:4,1:2,1:2)]))\n  event=diff(floor(data[1:time_lim,242]+rowSums(data[1:time_lim,select_15(5,1:4,1:2,1:2)])))\n  cens=diff(floor(data[1:time_lim,241]))\n  \n  mat_s=data.frame(time=numeric(),cens=numeric())\n  for(t in time[-1]){\n    if(event[t]>0){\n        if(dim(mat_s)[1]==0){\n          mat_s=data.frame(time=rep(t,event[t]),cens=rep(1,event[t]))\n        }else{\n          mat_s=rbind(mat_s,data.frame(time=rep(t,event[t]),cens=rep(1,event[t])))\n        }\n      if(cens[t]>0){\n        f=which(mat_s$time==t)[1]\n        mat_s[f:(f+cens[t]),\"cens\"]=0\n      }\n    }\n  }\n  mat_s=rbind(mat_s,data.frame(time=rep(time_lim-1,at_risk[time_lim]),cens=0))\n  \n  #--------------------------------------------------------------------------------------------------\n  #xstart, resistant\n  xstart=rep(0,250)\n  xstart[select_15(3,1:4,2,1:2)]=rep(1000,8)\n  xstart=xstart[select_15(3:5,1:4,1:2,1:2)]\n  xstart=c(xstart,0,0)\n  parms_lsoda=list(p1=theta,treat_dtg=treat_dtgb,parms1=params_rct1,p2=p2)\n  \n  #Simulation\n  data2 <- lsoda(xstart,times=1:time_lim,func= mod_dtg_lsoda, parms = parms_lsoda)\n  data2 <- data2[,-1]\n  data=matrix(0,nrow=time_lim,ncol=250)\n  data[1:time_lim,select_15(3:5,1:4,1:2,1:2)]=data2[1:time_lim,1:48]\n  data[1:time_lim,241:242]=data2[1:time_lim,49:50]\n  \n  #survival data\n  time=0:(time_lim-1)\n  at_risk=floor(rowSums(data[1:time_lim,select_15(3:4,1:4,1:2,1:2)]))\n  event=diff(floor(data[1:time_lim,242]+rowSums(data[1:time_lim,select_15(5,1:4,1:2,1:2)])))\n  cens=diff(floor(data[1:time_lim,241]))\n  \n  mat_r=data.frame(time=numeric(),cens=numeric())\n  for(t in time[-1]){\n    if(event[t]>0){\n      if(dim(mat_r)[1]==0){\n        mat_r=data.frame(time=rep(t,event[t]),cens=rep(1,event[t]))\n      }else{\n        mat_r=rbind(mat_r,data.frame(time=rep(t,event[t]),cens=rep(1,event[t])))\n      }\n      if(cens[t]>0){\n        f=which(mat_r$time==t)[1]\n        mat_r[f:(f+cens[t]),\"cens\"]=0\n      }\n    }\n  }\n\n  mat_r=rbind(mat_r,data.frame(time=rep(time_lim-1,at_risk[time_lim]),cens=0))\n\n  mat=data.frame(time=c(mat_s$time,mat_r$time),cens=c(mat_s$cens,mat_r$cens),susc=c(rep(0,dim(mat_r)[1]),rep(1,dim(mat_s)[1])))\n  \n  mat$time=mat$time#+2*rexp(dim(mat)[1],1/2)\n  \n  \n  #Cox regression\n  cox<-coxph(formula=Surv(time,cens)~susc,data=mat)\n  # fit<-survfit(Surv(time,cens)~susc,data=mat)\n  # print(fit)\n  # plot(fit, lty=2:3)\n  \n  return(c(exp(cox$coefficients)))\n  #return(list(h=exp(cox$coefficients),confint=exp(confint(cox))))\n}\nhazard_rct2=function(alpha1,alpha2,time_lim){\n  source(\"C:/Users/ahauser/Documents/Step1/Rfiles/used scripts/marisa/parmin4_v3.R\")\n  p2[\"alpha\"]=alpha1\n  p2[\"alpha2\"]=alpha2\n  \n  #------------------------------------------------------------------------------------------------------\n  #xstart, susceptible\n  xstart=rep(0,250)\n  xstart[select_15(4,1:4,1,1:2)]=rep(1000,8)\n  xstart=xstart[select_15(3:5,1:4,1:2,1:2)]\n  xstart=c(xstart,0,0)\n  parms_lsoda=list(p1=theta,treat_dtg=treat_dtgb,parms1=params_rct2,p2=p2)\n  \n  #Simulation\n  data2 <- lsoda(xstart,times=1:time_lim,func= mod_dtg_lsoda, parms = parms_lsoda)\n  data2 <- data2[,-1]\n  data=matrix(0,nrow=time_lim,ncol=250)\n  data[1:time_lim,select_15(3:5,1:4,1:2,1:2)]=data2[1:time_lim,1:48]\n  data[1:time_lim,241:242]=data2[1:time_lim,49:50]\n  \n  #survival data\n  time=0:(time_lim-1)\n  at_risk=floor(rowSums(data[1:time_lim,select_15(4,1:4,1:2,1:2)]))\n  event=diff(floor(data[1:time_lim,242]+rowSums(data[1:time_lim,select_15(5,1:4,1:2,1:2)])))\n  cens=diff(floor(data[1:time_lim,241]))\n  \n  mat_s=data.frame(time=numeric(),cens=numeric())\n  for(t in time[-1]){\n    if(event[t]>0){\n      if(dim(mat_s)[1]==0){\n        mat_s=data.frame(time=rep(t,event[t]),cens=rep(1,event[t]))\n      }else{\n        mat_s=rbind(mat_s,data.frame(time=rep(t,event[t]),cens=rep(1,event[t])))\n      }\n      if(cens[t]>0){\n        f=which(mat_s$time==t)[1]\n        mat_s[f:(f+cens[t]),\"cens\"]=0\n      }\n    }\n  }\n  mat_s=rbind(mat_s,data.frame(time=rep(time_lim-1,at_risk[time_lim]),cens=0))\n  \n  #--------------------------------------------------------------------------------------------------\n  #xstart, resistant\n  xstart=rep(0,250)\n  xstart[select_15(4,1:4,2,1:2)]=rep(1000,8)\n  xstart=xstart[select_15(3:5,1:4,1:2,1:2)]\n  xstart=c(xstart,0,0)\n  parms_lsoda=list(p1=theta,treat_dtg=treat_dtgb,parms1=params_rct2,p2=p2)\n  \n  #Simulation\n  data2 <- lsoda(xstart,times=1:time_lim,func= mod_dtg_lsoda, parms = parms_lsoda)\n  data2 <- data2[,-1]\n  data=matrix(0,nrow=time_lim,ncol=250)\n  data[1:time_lim,select_15(3:5,1:4,1:2,1:2)]=data2[1:time_lim,1:48]\n  data[1:time_lim,241:242]=data2[1:time_lim,49:50]\n  \n  #survival data\n  time=0:(time_lim-1)\n  at_risk=floor(rowSums(data[1:time_lim,select_15(4,1:4,1:2,1:2)]))\n  event=diff(floor(data[1:time_lim,242]+rowSums(data[1:time_lim,select_15(5,1:4,1:2,1:2)])))\n  cens=diff(floor(data[1:time_lim,241]))\n  \n  mat_r=data.frame(time=numeric(),cens=numeric())\n  for(t in time[-1]){\n    if(event[t]>0){\n      if(dim(mat_r)[1]==0){\n        mat_r=data.frame(time=rep(t,event[t]),cens=rep(1,event[t]))\n      }else{\n        mat_r=rbind(mat_r,data.frame(time=rep(t,event[t]),cens=rep(1,event[t])))\n      }\n      if(cens[t]>0){\n        f=which(mat_r$time==t)[1]\n        mat_r[f:(f+cens[t]),\"cens\"]=0\n      }\n    }\n  }\n  \n  mat_r=rbind(mat_r,data.frame(time=rep(time_lim-1,at_risk[time_lim]),cens=0))\n  \n  mat=data.frame(time=c(mat_s$time,mat_r$time),cens=c(mat_s$cens,mat_r$cens),susc=c(rep(0,dim(mat_r)[1]),rep(1,dim(mat_s)[1])))\n  \n  mat$time=mat$time#+2*rexp(dim(mat)[1],1/2)\n  \n  \n  #Cox regression\n  cox<-coxph(formula=Surv(time,cens)~susc,data=mat)\n  # fit<-survfit(Surv(time,cens)~susc,data=mat)\n  # print(fit)\n  # plot(fit, lty=2:3)\n  \n  return(c(exp(cox$coefficients)))\n  return(list(h=exp(cox$coefficients),confint=exp(confint(cox))))\n}\n\nhazard_ml=function(p){\n  alpha1=p[1]\n  alpha2=p[2]\n  logsd=p[3]\n  res1=hazard_rct1(alpha1,alpha2,13)\n  res2=hazard_rct1(alpha1,alpha2,49)\n  res3=hazard_rct2(alpha1,alpha2,19)\n  res=-sum(dnorm(x=log(c(3.13,3.13,5.8)),mean=log(c(res1,res2,res3)),sd=exp(logsd),log=TRUE))\n  print(c(p,res))\n  return(res)\n}\nhazard_mu=function(p){\n  alpha1=p[1]\n  alpha2=p[2]\n  print(p)\n  res1=hazard_rct1(alpha1,alpha2,13)\n  res2=hazard_rct1(alpha1,alpha2,49)\n  res3=hazard_rct2(alpha1,alpha2,19)\n  return(c(res1,res2,res3))\n}\nlibrary(bbmle)\ndata_mle=data.frame(y=c(3.13,3.13,5.8))\nnls()\nmle2(y~dnorm(mean=hazard_mu(mu),sd=exp(logsd)),start=list(mu=c(2.63,4.91),logsd=-4.5),data=data_mle)\n\n\npar_hazard<-optim(par=c(2.63856359,4.91477776,-4.5098),fn=hazard_ml,method=\"L-BFGS-B\",lower=c(1,1,-15),upper=c(10,10,-0.7),control=list(trace=TRUE,REPORT=1))\npar_hazard<-optim(par=c(2.63856359,4.91477776,-4.5098),fn=hazard_ml,method=\"Nelder-Mead\",control=list(trace=TRUE,REPORT=1))\n\nhazard_ml(c(2.63,4.91,0.01))\n\nhazard_ml(c(2.8,4.5,0.2))\nhazard_ml(c(1,4.5,0.2))\nhazard_ml(c(10,4.5,0.2))\nhazard_ml(c(2.8,1,0.2))\nhazard_ml(c(2.8,10,0.2))\nhazard_ml(c(2.8,4.5,0.01))\nhazard_ml(c(2.8,4.5,0.01))\n\nalpha1=2.8\nalpha2=4.5\nres1=hazard_rct1(alpha1,alpha2,13)\nres2=hazard_rct1(alpha1,alpha2,49)\nres3=hazard_rct2(alpha1,alpha2,19)\nlog(c(3.13,3.13,5.8))\nqnorm(p=0.05,mean=log(c(res1,res2,res3)))\nqnorm(p=0.95,mean=log(c(res1,res2,res3)))\ndnorm(x=log(c(3.13,3.13,5.8)),mean=log(c(res1,res2,res3)),sd=0.01)\nsum(dnorm(x=log(c(3.13,3.13,5.8)),mean=log(c(res1,res2,res3)),sd=0.01,log=TRUE))\n\nhazard_ml(c(2.63,4.91,0.01))\nhazard_ml(c(2.63,4.91,0.005))\nhazard_ml(c(2.63,4.91,0.02))\nhazard_ml(c(2.8,4.5,0.5))\n\nhazard_ml(c(2.799,4.5,0.2))\nhazard_ml(c(2.801,4.5,0.2))\n\n\nff<-function(x){\n  res<- (1-x[1])^2+100*(x[2]-x[1]^2)^2+(x[3]-1)^2\n  return(res)\n}\na<-optim(par=c(2.8,5,0.1),fn=ff,method=\"L-BFGS-B\",lower=c(0.1,0.1,0.1),upper=c(10,10,10),control=list(trace=TRUE,REPORT=1))\na\n\nhazard(2,2,13)\nhazard(2,2,60)\nhazard(2,5,12)\nhazard(2,5,60)\nhazard(2,2,13)\nhazard(2,2,60)\nhazard(1,5,13)\nhazard(1,5,60)\n\nhazard_rct1(2.5,4,13)\nhazard_rct1(2.5,4,18)\nhazard_rct1(2,8,13)\nhazard_rct1(2,8,18)\n\npar_alpha=data.frame(alpha1=rep(c(2.5,2.8,3,3.2),each=4),alpha2=rep(c(3.5,4,4.3,4.6),4),res1=NA,res2=NA)\nfor(i in 1:dim(par_alpha)[1]){\n  res=c(hazard_rct1(par_alpha[i,1],par_alpha[i,2],13),hazard_rct2(par_alpha[i,1],par_alpha[i,2],19))\n  par_alpha[i,c(\"res1\",\"res2\")]=res\n  print(i)\n}\n#alpha1=3,alpha2=4",
    "created" : 1555592977319.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "155|45|248|0|\n249|45|342|0|\n",
    "hash" : "3346535748",
    "id" : "C1FB46D",
    "lastKnownWriteTime" : 1556635183,
    "last_content_update" : 1556635183022,
    "path" : "~/Step2/dtg/dtg_impact.R",
    "project_path" : "dtg_impact.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 16,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}