#Packages
library(deSolve)
library(zoo)
library("Rcpp")
library("BH")
############################################################################################################################################################################################################################################################
#Function to convert dydt between parmin_dtg.R and SIR_new_function.R
#parmin: old, SIR_new_function: new
new_position=function(x){
  list=list(1,2,c(7,13),c(8,14),c(9,15),22,23,24,c(16,19),c(17,20),c(18,21),3,c(4,10),c(5,11),c(6,12))
  return((list[x]))
}

x_old=function(x){
  v1=1:15
  v2=1:4
  v3=1:2
  v4=1:2
  v1_new<-new_position(v1)
  x_new = rep(NA,length(v1)*length(v2)*length(v3)*length(v4))
  for(i in 1:length(v1_new)){
    for(j in 1:length(v2)){
      for(l in 1:length(v4)){
        for(k in 1:length(v3)){
          x_new[i+(j-1)*length(v1_new)+(l-1)*length(v1_new)*length(v2)+(k-1)*length(v1_new)*length(v2)*length(v4)]= sum(x[posa(v1_new[[i]],j,k,l)])
        }
      }
    }
  }
  return(x_new)
}

pos_old=function(v1, v2, v3, v4){
  r = rep(0,length(v1)*length(v2)*length(v3)*length(v4))
  for(i in 1:length(v1)){
    for(j in 1:length(v2)){
      for(k in 1:length(v3)){
        for(l in 1:length(v4)){
          r[i+(j-1)*length(v1)+(k-1)*length(v1)*length(v2)+(l-1)*length(v1)*length(v2)*length(v3)]= v1[i]+(v2[j]-1)*15+(v3[k]-1)*15*4+(v4[l]-1)*15*4*2 
        }
      }
    }
  }
  return(r)
}

x_new=function(x,p_TDF=1.0){
  pos <- c(1,2,12,13,14,15,3,4,5,13,14,15,3,4,5,9,10,11,9,10,11,6,7,8)
  prob <- c(rep(1,3),rep(p_TDF,3),rep(p_TDF,3),rep((1-p_TDF),3),rep((1-p_TDF),3),rep(p_TDF,3),rep((1-p_TDF),3),rep(1,3))
  
  v1=1:24
  v2=1:4
  v3=1:2
  v4=1:2
  
  x_new = rep(0,2+length(v1)*length(v2)*length(v3)*length(v4))
  for(i in 1:length(v1)){
    for(j in 1:length(v2)){
      for(l in 1:length(v4)){
        for(k in 1:length(v3)){
          x_new[2+i+(j-1)*length(v1)+(l-1)*length(v1)*length(v2)+(k-1)*length(v1)*length(v2)*length(v4)]= prob[i] * x[pos_old(pos[i],j,k,l)]
        }
      }
    }
  }
  return(x_new)
}
##############################################################################################################################
#Check dydt between parmin_dtg.R and SIR_new_function.R
#Possible pitfalls:
#  - to compare the models, put N=1000 in mod_rate_2res
#  - mu (how p1 is defined), but should be ok now

#from old model and then tranform to the new one
x1=rnorm(240,1000,100)
x2=x_new(x1)
x1_prime=x_old(x2) #check if back transformed new one is same as the old one
#from new to old model
x2=rep(0,386)
x2[posa(1:24,1:4,1:2,1:2)]=abs(rnorm(384,50,20))
x1=x_old(x2)
x1=c(x1,rep(0,10))

#Models
#old model
#load parmin_dtg.R, treat_dtg_mat, params (defined later in the script)
a1<-mod_dtg(t=t,x=x1,p1=p1,treat_dtg=treat_dtg_mat[9,],parms= params,p2=p2)
#new model
source("C:/Users/ahauser/Documents/Step2/Step2_revised/dtg/SIR_new_function.R")
a2<-(SIR_new2(t=t,y=x2,theta=c(1,1,1,1),x_r=0,x_i=0))[[1]]
a2<-x_old(a2)

#Difference between a1 and a2
plot(a1[1:240]-a2)
array(abs(a1[1:240]-a2)>0.000001,dim=c(15,4,2,2))
array(a1[1:240],dim=c(15,4,2,2))-array(a2,dim=c(15,4,2,2))
array(a1[1:240],dim=c(15,4,2,2))
array(a2,dim=c(15,4,2,2))


################################################################
#Check model outputs
#run both models

#at time 2019
round(array(data_x1[169,1:240]-x_old(data_x2[1,]),dim=c(15,4,2,2)))
round(array(data_x1[169,1:240],dim=c(15,4,2,2)))
round(array(x_old(data_x2[1,]),dim=c(15,4,2,2)))
round(array(data_x2[1,3:386],dim=c(24,4,2,2)))

#output1
#old model
outcome=function(data){
  tmax=dim(data)[1]
  rowSums(data[seq(1,tmax,1),select_15(c(2,12),1:4,2,1:2)])/rowSums(data[seq(1,tmax,1),select_15(c(2,12),1:4,1:2,1:2)])
}
data_x1=dtg_list[[2]]
outcome(data_x1)
#new model
outcome=function(data){
  tmax=dim(data)[1]
  outcome=rowSums(data[seq(1,tmax,1),posa(c(2,3),1:4,1:2,2)])/rowSums(data[seq(1,tmax,1),posa(c(2,3),1:4,1:2,1:2)])
  return(outcome)
}
data_x2=data_scen[[9]]
outcome(data_x2)






##############################################################################################################################
##############################################################################################################################
#parmin_dtg.R: run model
source("C:/Users/ahauser/Documents/Step2/dtg/value_gender4_v5.R")
source("C:/Users/ahauser/Documents/Step2/dtg/parmin_dtg.R")
p1=c(rate1_inf=3.318999e+00, rate2_inf=5.440886e-01, rate1_diag=2.736363e+02, rate2_diag=7.710578e+00, rate_treat=1.879695e-03,rate_death=1.632000e-01)
p2=c(rate1_inf=NA, rate2_inf=NA, rate1_diag=NA, rate2_diag=NA, rate_treat=NA,rate_death=NA,q=0.05,rate_ratio=0.5,k1=1,k2=2,k3=2,alpha=2,rate_res=5,rate_susc=125)
#no treatment interruption
params<-within(params,{
  RateStopTreatFirst=4.35/c(Inf,Inf,Inf,Inf)
  RateStopSuppFirst=4.35/c(Inf,Inf,Inf,Inf)
  RateStopFailFirst=4.35/c(Inf,Inf,Inf,Inf)
  RateStopTreatSecond=4.35/c(Inf,Inf,Inf,Inf) #Assumption : T2 same as T1
  RateStopSuppSecond=4.35/c(Inf,Inf,Inf,Inf)
  RateStopFailSecond=4.35/c(Inf,Inf,Inf,Inf)
})
#no starting with second-line PI
params<-within(params,{
  #RateDirectTreatSecond=4.35/c(5000,12000,13000,1850)
  RateTreatSecond=4.35/c(531,427,294,189)*1/5
  RateDirectTreatSecond=c(0,0,0,0)
})
#Resistance parameters
# p2["alpha"]=2
# p2["alpha2"]=2

p2["alpha"]=2.64
p2["alpha2"]=4.9

##############################################################################################################################
#fix treat_dtg
dtg_women1=0.175 #above 50
dtg_women2=0.63 #above 50 or using contraception
treat_dtgb=c(p_w_start=0,p_w_switch=0,rate_first=0,rate_switch=0,p_treat=0,p_supp=0,p_fail=0,delay_first=0,delay_switch=0)
treat_dtg1=c(p_w_start=0,p_w_switch=0,rate_first=1,rate_switch=0,p_treat=0,p_supp=0,p_fail=0,delay_first=0,delay_switch=0)
treat_dtg2=c(p_w_start=dtg_women1,p_w_switch=0,rate_first=1,rate_switch=0,p_treat=0,p_supp=0,p_fail=0,delay_first=0,delay_switch=0)
treat_dtg3=c(p_w_start=dtg_women2,p_w_switch=0,rate_first=1,rate_switch=0,p_treat=0,p_supp=0,p_fail=0,delay_first=0,delay_switch=0)
treat_dtg4=c(p_w_start=1,p_w_switch=0,rate_first=1,rate_switch=0,p_treat=0,p_supp=0,p_fail=0,delay_first=0,delay_switch=0)
#switch also treat and suppressed
treat_dtg5=c(p_w_start=0,p_w_switch=0,rate_first=1,rate_switch=1,p_treat=1,p_supp=1,p_fail=1,delay_first=0,delay_switch=0)
treat_dtg6=c(p_w_start=dtg_women1,p_w_switch=dtg_women1,rate_first=1,rate_switch=1,p_treat=1,p_supp=1,p_fail=1,delay_first=0,delay_switch=0)
treat_dtg7=c(p_w_start=dtg_women2,p_w_switch=dtg_women2,rate_first=1,rate_switch=1,p_treat=1,p_supp=1,p_fail=1,delay_first=0,delay_switch=0)
treat_dtg8=c(p_w_start=1,p_w_switch=1,rate_first=1,rate_switch=1,p_treat=1,p_supp=1,p_fail=1,delay_first=0,delay_switch=0)
treat_dtg9=c(p_w_start=0.99,p_w_switch=0.99,rate_first=1,rate_switch=1,p_treat=1,p_supp=1,p_fail=1,delay_first=0,delay_switch=0)
treat_dtg_mat=rbind(treat_dtgb,treat_dtg1,treat_dtg2,treat_dtg3,treat_dtg4,treat_dtg5,treat_dtg6,treat_dtg7,treat_dtg8,treat_dtg9)
treat_dtg_mat[,"p_treat"]=0
##############################################################################################################################

source("C:/Users/ahauser/Documents/Step2/dtg/parmin_dtg.R")
sourceCpp("C:/Users/ahauser/Documents/Step2/dtg/solvdiff_cpp_dtg_2_2005.cpp")
xstart_dtg_2_2005=xstart_f_dtg_2(p2,treat_dtgb)
theta=p1
#15 compartments
data=my_fun10_solver2_dtg_2(xstart_dtg_2_2005,theta,treat_dtgb,params,p2)
#figures_2_dtg_update(data)
save(data,file="C:/Users/ahauser/Documents/Step2/R_results/data_dtg_2005_2019.RData")
#load function, run from 2005 to 2018
#Counterfactual scenarios from 2018 to 2038
sourceCpp("C:/Users/ahauser/Documents/Step2/dtg/solvdiff_cpp_dtg_2_2019.cpp")
xstart_dtg_2_2018=data[dim(data)[1],]
dtg_list=list()
for(i in 1:10){
  xstart=xstart_dtg_2_2018
  
  xstart[select_15(12:15,1:4,1:2,2)]=(1-treat_dtg_mat[i,1])*(xstart_dtg_2_2018[select_15(2:5,1:4,1:2,2)]+xstart_dtg_2_2018[select_15(12:15,1:4,1:2,2)])
  xstart[select_15(2:5,1:4,1:2,2)]=treat_dtg_mat[i,1]*(xstart_dtg_2_2018[select_15(2:5,1:4,1:2,2)]+xstart_dtg_2_2018[select_15(12:15,1:4,1:2,2)])
  xstart=c(xstart[1:240],xstart_dtg_2_2018[241:250])
  
  data1=my_fun10_solver2_dtg_2(xstart,theta,treat_dtg_mat[i,],params,p2)
  rownames(data1)=1:(dim(data1)[1])
  data1=rbind(data[-dim(data)[1],],data1)
  dtg_list[[i]]<-data1
  print(i)
}

##############################################################################################################################
##############################################################################################################################
#SIR_new_function.R: run model
#From 2005 to 2019
source("C:/Users/ahauser/Documents/Step2/Step2_revised/dtg/SIR_new_function.R")
x_start=x_start2005()
times=0:168

SIR_solve=function(t,y,parms){
  theta=parms[[1]]
  x_r=0
  x_i=0
  return(SIR_new2(t,y,theta,x_r,x_ir))
}

data_2019 = (ode(x_start, times=times,func=SIR_solve,parms=list(c(0,0,0,1))))[,2:387]

#From 2019 to 2040
scen=c("0) all on NNRTI","1) all men on DTG","2) all men and women not of childbearing age on DTG",
       "3) all men and women not at risk of pregancy on DTG","4) all men and women on DTG")
scenario = data.frame(name1=c("No DTG",rep("DTG as a first-line",4),rep("DTG as a first-line and switch",4)),
                      name2=c(scen,scen[2:5]),
                      dtg_1st = c(0,rep(1,8)),
                      dtg_switch = c(0,rep(0,4),rep(1,4)),
                      p_dtg = c(0,rep(c(0,0.175,0.63,1),2)))
times=168+0:252
data_scen=list()
for(i in 1:9){
  x_start=x_start2019(data_2019[169,],p_TDF = 1.0, p_DTG = scenario$p_dtg[i])
  data_scen[[i]] = (ode(x_start, times=times,func=SIR_solve,parms=list(c(as.numeric(scenario[i,3:5]),1))))[,2:387]
  print(i)
}

##############################################################################################################################
#Output
outcome=function(data){
  tmax=dim(data)[1]
  outcome=rowSums(data[seq(1,tmax,1),posa(c(2,3),1:4,1:2,2)])/rowSums(data[seq(1,tmax,1),posa(c(2,3),1:4,1:2,1:2)])
  return(outcome)
}

#output: no DTG, from 2005 to 2019
outcome_2019=data.frame(year=seq(2005,2019,1/12))
outcome_2019$name1=scenario[1,"name1"]
outcome_2019$name2=scenario[1,"name2"]
outcome_2019$outcome1=outcome(data_2019)

#output: scenarios from 2019 to 2040
for(i in 1:(dim(scenario)[1])){
  #With simulations from ub2.job
  list_data=list()
  for(j in 1:1){
    #load(paste("C:/Users/ahauser/Documents/Step2/R_results/dtg_sens/dtg_sens17/data1_",index_list[i],"_",j,".RData",sep=""))
    list_data[[j]]=data_scen[[i]]
  }
  outcome_scen_i=data.frame(year=seq(2019,2040,1/12))
  outcome_scen_i$name1=scenario[i,"name1"]
  outcome_scen_i$name2=scenario[i,"name2"]
  outcome_scen_i$outcome1=outcome(data_scen[[i]])
  #outcome_scen[,c("out_inf","out_sup")]=t(apply(sapply(list_data,function(x){outcome(x)}),1,function(y) quantile(y,probs=c(0.025,0.975))))
  if(i==1){ outcome_scen = outcome_scen_i }else{ outcome_scen = rbind(outcome_scen,outcome_scen_i) }
}

##############################################################################################################################
#Plot
color=c("black","blue","violet","orange","red")
#DTG as first-line
dtg_plot_s1<-filter(outcome_scen,name1=="No DTG" | name1=="DTG as a first-line") %>%
             ggplot( mapping=aes(x=year,y=outcome1,
                    color=factor(name2,labels=c("All on NNRTI  ", "Only men on DTG  ",
                                                "All men and women not of childbearing age on DTG  ",
                                                "All men and women not at risk of pregnancy on DTG  ",
                                                "All men and women on DTG  ")))) +
  geom_line(size=1.1)+
  theme_bw()+
  theme(legend.position="right")+
  scale_x_continuous(breaks=c(2010,2020,2030,2040),labels=c("2010","2020","2030","2040"),limits=c(2005,2044))+
  scale_y_continuous(labels = scales::percent,limits=c(0,0.7))+
  labs(color="Scenarios")+
  xlab("Calendar year")+
  ylab("NNRTI TDR (in %)")+
  geom_vline(xintercept = 2019, linetype="dashed", 
             color = "black", size=1)+
  annotate("text",x=2020,y=0.5,hjust=0,label="DTG\nintroduction",color="black",size=3.5)+
  scale_color_manual(values=rep(color,2))
dtg_plot_s1+
  geom_line(data=outcome_2019,color="black",size=1.1)+
  geom_line(data=outcome_scen[outcome_scen$name1=="No DTG",],color="black",size=1.1)

#DTG as switch
dtg_plot_s2<-filter(outcome_scen,name1=="No DTG" | name1=="DTG as a first-line and switch") %>%
  ggplot( mapping=aes(x=year,y=outcome1,
                      color=factor(name2,labels=c("All on NNRTI  ", "Only men on DTG  ",
                                                  "All men and women not of childbearing age on DTG  ",
                                                  "All men and women not at risk of pregnancy on DTG  ",
                                                  "All men and women on DTG  ")))) +
  geom_line(size=1.1)+
  theme_bw()+
  theme(legend.position="right")+
  scale_x_continuous(breaks=c(2010,2020,2030,2040),labels=c("2010","2020","2030","2040"),limits=c(2005,2044))+
  scale_y_continuous(labels = scales::percent,limits=c(0,0.7))+
  labs(color="Scenarios")+
  xlab("Calendar year")+
  ylab("NNRTI TDR (in %)")+
  geom_vline(xintercept = 2019, linetype="dashed", 
             color = "black", size=1)+
  annotate("text",x=2020,y=0.5,hjust=0,label="DTG\nintroduction",color="black",size=3.5)+
  scale_color_manual(values=rep(color,2))
dtg_plot_s2+
  geom_line(data=outcome_2019,color="black",size=1.1)+
  geom_line(data=outcome_scen[outcome_scen$name1=="No DTG",],color="black",size=1.1)



##############################################################################################################################
##############################################################################################################################
#Old models
a2<-SIR(t=t,y=x2)

x2=rep(0,386)
x2[posa(1:24,1:4,1:2,1:2)]=rnorm(384,100,10)
x2[1:2]=rep(1000,2)

sourceCpp("C:/Users/ahauser/Documents/Step3/R/diff_eq/ode_R.cpp")
data_R<-boostExample(x2)

plot(data_R[121,]-data_cpp[121,])
array(abs(data_R[2,3:386]-data_cpp[2,3:386])>0.04,dim=c(24,4,2,2))
array(data_cpp[2,3:386],dim=c(24,4,2,2))
##############################################################################################################################
#Model parameters
n_pop=sum(start)
t_max=121
time=1:t_max
Susc=round(c(0.5,0.5)*c(50960829.93)/1000) #number of susceptible people see value_gender4_v5.R (need to change it to vary over time)
y_start = c(Susc,as.vector(start))
n_pop=sum(y_start)
y_start_1=y_start/n_pop

list_data=list(
               n_obs = t_max, # number of days observed
               n_theta = 1, # number of model parameters
               n_difeq = length(y_start), # number of diff eq
               n_pop = n_pop, # population
               y_init = structure(y_start_1,dim=length(y_start_1)), # initial values
               t0 = 0, # initial time point ( zero )
               ts = time, # time points observed
               prop_DTG = 1, # proportion of DTG-eligible women
               inference = 1)

#Function to initiate theta parameters
ini_1 = function(){
  return(list(theta=structure(runif(1,0,1),dim=1)))
}

#Stan parameters
n_chains = 1
n_warmups = 0
n_iter = 1

#Model
mod1 <-stan_model(file = paste("C:/Users/ahauser/Documents/Step3/R/diff_eq/diff1.stan",sep=""))
mod2 <-stan_model(file = paste("C:/Users/ahauser/Documents/Step3/R/diff_eq/diff1b.stan",sep=""))
mod3 <-stan_model(file = paste("C:/Users/ahauser/Documents/Step3/R/diff_eq/diff1c.stan",sep=""))
#Stan
time.start_nuts1 <- Sys.time()
fit = sampling(mod2, data = list_data, init = 0, chains = n_chains, warmup = n_warmups, iter = n_iter, seed=13219, algorithm = "Fixed_param")
time.end_nuts1 <- Sys.time()
time.end_nuts1 - time.start_nuts1

print(fit,pars = "tdr")

#Stan parameters
n_chains = 1
n_warmups = 0
n_iter = 1
#Stan
time.start_nuts1 <- Sys.time()
fit = sampling(mod3, data = list_data, init = 0, chains = n_chains, warmup = n_warmups, iter = n_iter)
time.end_nuts1 <- Sys.time()
time.end_nuts1 - time.start_nuts1

print(fit,pars = "tdr")

